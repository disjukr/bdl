# standard - portone-browser-sdk

import portone.v2.browserSdk.entity { PgCode, PgMessage }

enum CheckoutServiceErrorCode {
  BadRequest,
  ParseChannelFailed,
  ParseIdentityVerificationPrepareResponseFailed,
  ParseIssuePrepareResponseFailed,
  ParsePgRawIdentityVerificationResponseFailed,
  ParsePgRawIssueBillingKeyResponseFailed,
  ParsePgRawResponseFailed,
  ParsePrepareResponseFailed,
}

enum GrpcErrorCode {
  @ description - 0/200
  Ok,

  @ description - 1/422
  Cancelled,

  @ description - 2/500
  Unknown,

  @ description - 3/400
  InvalidArgument,

  @ description - 4/504
  DeadlineExceeded,

  @ description - 5/404
  NotFound,

  @ description - 6/409
  AlreadyExists,

  @ description - 7/403
  PermissionDenied,

  @ description - 8/429
  ResourceExhausted,

  @ description - 9/400
  FailedPrecondition,

  @ description - 10/409
  Aborted,

  @ description - 11/400
  OutOfRange,

  @ description - 2/501
  Unimplemented,

  @ description - 13/500
  Internal,

  @ description - 14/503
  Unavailable,

  @ description - 15/500
  DataLoss,

  @ description - 16/401
  Unauthenticated,
}

enum TxServiceIdentityVerificationErrorCode {
  RequestParseFailed,
  InvalidEntityState,
  StoreNotFound,
  ChannelNotFound,
  PGProviderError,
  IdentityVerificationAlreadyVerified,
  AllChannelsNotSatisfied,
  UnknownError,
}

enum TxServiceIssueErrorCode {
  RequestParseFailed,
  InvalidEntityState,
  ConfirmUrlRequired,
  StoreNotFound,
  ChannelNotFound,
  PGProviderError,
  AllChannelsNotSatisfied,
  BillingKeyNotFound,
  UnknownError,
}

enum TxServicePayErrorCode {
  RequestParseFailed,
  InvalidEntityState,
  ConfirmUrlRequired,
  StoreNotFound,
  ChannelNotFound,
  PGProviderError,
  PaymentNotFound,
  PaymentAlreadyPaid,
  TransactionNotFound,
  AllChannelsNotSatisfied,
  AmountNotEqualToPredefined,
  ConfirmProcessFailed,
  UnknownError,
}

@ description
| **오류 코드**
|
| - 실패한 경우 오류 코드입니다.
oneof Code {
  CheckoutServiceErrorCode,
  GrpcErrorCode,
  TxServiceIdentityVerificationErrorCode,
}

@ transactionType - IDENTITY_VERIFICATION
struct IdentityVerificationError {
  @ description
  | **오류 코드**
  |
  | - 실패한 경우 오류 코드입니다.
  code: Code,

  @ description
  | **오류 메시지**
  |
  | - 실패한 경우 오류 메시지입니다.
  message: string,

  identityVerificationId?: string,
  identityVerificationTxId?: string,
  pgCode?: PgCode,
  pgMessage?: PgMessage,
}

@ description
| **오류 코드**
|
| - 실패한 경우 오류 코드입니다.
oneof Code_1 {
  CheckoutServiceErrorCode,
  GrpcErrorCode,
  TxServiceIssueErrorCode,
  TxServicePayErrorCode,
}

@ transactionType - ISSUE_BILLING_KEY_AND_PAY
struct IssueBillingKeyAndPayError {
  txId?: string,
  paymentId?: string,
  billingKey?: string,

  @ description
  | **오류 코드**
  |
  | - 실패한 경우 오류 코드입니다.
  code: Code_1,

  @ description
  | **오류 메시지**
  |
  | - 실패한 경우 오류 메시지입니다.
  message: string,

  pgCode?: PgCode,
  pgMessage?: PgMessage,
}

@ description
| **오류 코드**
|
| - 실패한 경우 오류 코드입니다.
oneof Code_2 {
  CheckoutServiceErrorCode,
  GrpcErrorCode,
  TxServiceIssueErrorCode,
}

@ transactionType - ISSUE_BILLING_KEY
struct IssueBillingKeyError {
  @ description
  | **오류 코드**
  |
  | - 실패한 경우 오류 코드입니다.
  code: Code_2,

  @ description
  | **오류 메시지**
  |
  | - 실패한 경우 오류 메시지입니다.
  message: string,

  billingKey?: string,
  pgCode?: PgCode,
  pgMessage?: PgMessage,
}

@ description - **오류 코드**
oneof Code_3 {
  CheckoutServiceErrorCode,
  GrpcErrorCode,
}

struct ModuleError {
  @ description - **오류 코드**
  code: Code_3,

  @ description
  | **오류 메시지**
  |
  | - 실패한 경우 오류 메시지입니다.
  message: string,
}

@ description
| **오류 코드**
|
| - 실패한 경우 오류 코드입니다.
oneof Code_4 {
  CheckoutServiceErrorCode,
  GrpcErrorCode,
  TxServicePayErrorCode,
}

@ transactionType - PAYMENT
struct PaymentError {
  @ description
  | **오류 코드**
  |
  | - 실패한 경우 오류 코드입니다.
  code: Code_4,

  @ description
  | **오류 메시지**
  |
  | - 실패한 경우 오류 메시지입니다.
  message: string,

  txId?: string,
  paymentId?: string,
  pgCode?: PgCode,
  pgMessage?: PgMessage,
}

@ description
| **오류 코드**
|
| - 실패한 경우 오류 코드입니다.
oneof Code_5 {
  CheckoutServiceErrorCode,
  GrpcErrorCode,
  TxServiceIssueErrorCode,
}

@ transactionType - ISSUE_BILLING_KEY
struct LoadIssueBillingKeyUIError {
  @ description
  | **오류 코드**
  |
  | - 실패한 경우 오류 코드입니다.
  code: Code_5,

  @ description
  | **오류 메시지**
  |
  | - 실패한 경우 오류 메시지입니다.
  message: string,
}

@ description
| **오류 코드**
|
| - 실패한 경우 오류 코드입니다.
oneof Code_6 {
  CheckoutServiceErrorCode,
  GrpcErrorCode,
  TxServicePayErrorCode,
}

@ transactionType - PAYMENT
struct LoadPaymentUIError {
  @ description
  | **오류 코드**
  |
  | - 실패한 경우 오류 코드입니다.
  code: Code_6,

  @ description
  | **오류 메시지**
  |
  | - 실패한 경우 오류 메시지입니다.
  message: string,
}
