# standard - portone-rest-api

import portone.v2.api.data {
  Bank,
  GetPlatformAccountHolderError as GetPlatformAccountHolderError1,
  PlatformAccountHolder,
}

@ http - GET /platform/bank-accounts/{bank}/{accountNumber}/holder
@ summary - 예금주 조회
@ description - 계좌의 예금주를 조회합니다.
@ security
| - bearerJwt: []
| - portOne: []
proc GetPlatformAccountHolder =
  GetPlatformAccountHolderInput ->
  GetPlatformAccountHolderOutput throws GetPlatformAccountHolderError

struct GetPlatformAccountHolderInput {
  @ in - path
  @ summary - 은행
  bank: Bank,

  @ in - path
  @ summary - '-'를 제외한 계좌 번호
  accountNumber: string,

  @ in - query
  @ summary - 생년월일
  @ description - 실명 조회를 위해 추가로 보낼 수 있습니다. birthdate과 businessRegistrationNumber 중 하나만 사용해야 합니다.
  birthdate?: string,

  @ in - query
  @ summary - 사업자등록번호
  @ description - 실명 조회를 위해 추가로 보낼 수 있습니다. birthdate과 businessRegistrationNumber 중 하나만 사용해야 합니다.
  businessRegistrationNumber?: string,
}

oneof GetPlatformAccountHolderOutput {
  @ status - 200
  @ description - 성공 응답으로 조회된 예금주 명이 반환됩니다.
  PlatformAccountHolder,
}

oneof GetPlatformAccountHolderError {
  @ status - 400
  @ description
  | * `InvalidRequestError`: 요청된 입력 정보가 유효하지 않은 경우
  | * `PlatformNotSupportedBankError`: 지원하지 않는 은행인 경우
  GetPlatformAccountHolderError1,

  @ status - 401
  @ description - * `UnauthorizedError`: 인증 정보가 올바르지 않은 경우
  GetPlatformAccountHolderError1,

  @ status - 403
  @ description
  | * `PlatformNotEnabledError`: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우
  | * `ForbiddenError`: 요청이 거절된 경우
  GetPlatformAccountHolderError1,

  @ status - 503
  @ description
  | * `PlatformExternalApiTemporarilyFailedError`: 외부 api의 일시적인 오류
  | * `PlatformExternalApiFailedError`: 외부 api 오류
  GetPlatformAccountHolderError1,
}
