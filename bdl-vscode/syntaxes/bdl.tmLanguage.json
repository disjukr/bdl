{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "BDL",
  "scopeName": "source.bdl",
  "patterns": [
    {
      "include": "#statements"
    },
    {
      "include": "#attributes"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    }
  ],
  "repository": {
    "statements": {
      "patterns": [
        {
          "include": "#import-statement"
        },
        {
          "include": "#scalar-statement"
        }
      ]
    },
    "import-statement": {
      "name": "meta.statement.import.bdl",
      "patterns": [
        {
          "begin": "\\b(import)\\b",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.import.bdl"
            }
          },
          "end": "\\}",
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "begin": "\\{",
              "end": "(?=\\})",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "name": "punctuation.comma.bdl",
                  "match": ","
                },
                {
                  "name": "keyword.control.as.bdl",
                  "match": "\\bas\\b"
                },
                {
                  "name": "variable.other.bdl",
                  "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
                }
              ]
            }
          ]
        }
      ]
    },
    "scalar-statement": {
      "name": "meta.statement.scalar.bdl",
      "patterns": [
        {
          "match": "\\b(scalar)\\b\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?:=\\s*(?:([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?:\\[\\s*([a-zA-Z_][a-zA-Z0-9_]*)?\\s*\\])?)?)?",
          "captures": {
            "1": {
              "name": "storage.type.bdl"
            },
            "2": {
              "name": "entity.name.type.bdl"
            },
            "3": {
              "name": "entity.name.type.bdl"
            },
            "4": {
              "name": "entity.name.type.bdl"
            }
          }
        }
      ]
    },
    "attributes": {
      "patterns": [
        {
          "name": "meta.attribute.oneliner.bdl",
          "match": "(@|#)(?: |([^ \\n]))?([^\\-\\n]*)(?:-(?: |([^ \\n]))([^\\n]*))",
          "captures": {
            "1": {
              "name": "keyword.control.begin.attribute.bdl"
            },
            "2": {
              "name": "invalid.illegal.attribute.bdl"
            },
            "3": {
              "name": "entity.other.attribute-name.attribute.bdl"
            },
            "4": {
              "name": "invalid.illegal.attribute.bdl"
            },
            "5": {
              "name": "string.attribute.bdl"
            }
          }
        },
        {
          "name": "meta.attribute.multiline.bdl",
          "begin": "(@|#)(?: |([^ \\n]))?([^\\n]*)",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.begin.attribute.bdl"
            },
            "2": {
              "name": "invalid.illegal.attribute.bdl"
            },
            "3": {
              "name": "entity.other.attribute-name.attribute.bdl"
            }
          },
          "end": "^(?![ \\t]*\\|)",
          "patterns": [
            {
              "match": "[ \\t]*(\\|)(?: |([^ \\n]))?([^\\n]*)",
              "captures": {
                "1": {
                  "name": "keyword.other.pipe.attribute.bdl"
                },
                "2": {
                  "name": "invalid.illegal.attribute.bdl"
                },
                "3": {
                  "name": "string.attribute.bdl"
                }
              }
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.bdl",
          "match": "//.*(?:\\n|$)"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.import.bdl",
          "match": "\\b(import)\\b"
        },
        {
          "name": "storage.type.bdl",
          "match": "\\b(scalar|enum|union|struct|rpc|socket)\\b"
        }
      ]
    }
  }
}
