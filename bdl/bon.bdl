# standard - conventional

union BonValue {
  Primitive(typePath?: string, value: PrimitiveValue),
  Array(typePath?: string, items: BonValue[]),
  Dictionary(typePath?: string, entries: Entry[]),
  Object(typePath?: string, fields: Field[]),
  UnionValue(typePath?: string, itemName: string, fields: Field[]),
}

struct Field {
  name: string,
  value: BonValue,
}

struct Entry {
  key: BonValue,
  value: BonValue,
}

union PrimitiveValue {
  Null,
  Boolean(value: boolean),
  Identifier(value: string),
  Integer(value: integer),
  Float(value: FloatValue),
  String(value: string),
}

union FloatValue {
  NotANumber,
  Infinity(sign: boolean),
  Value(
    // base: 10
    significand: integer,
    exponent: integer,
  ),
}
